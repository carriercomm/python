<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:gorm="http://grails.org/schema/gorm" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://grails.org/schema/gorm http://grails.org/schema/gorm/gorm.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <!-- 配置文件路径指定 -->
    <context:property-placeholder location="file:/data/www/apps/order-service-server/config/datasource.properties"/>
    <!-- 数据源配置 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="url" value="${database.pool.url}"/>
        <property name="username" value="${database.pool.username}"/>
        <property name="password" value="${database.pool.password}"/>
        <property name="driverClassName" value="${database.pool.driver}"/>
        <property name="maxActive" value="${database.pool.maxActive}"/>
        <property name="maxWait" value="${database.pool.maxWait}"/>
        <property name="maxIdle" value="${database.pool.maxIdle}"/>
        <property name="minIdle" value="${database.pool.minIdle}"/>
        <property name="initialSize" value="${database.pool.initialSize}"/>
        <property name="minEvictableIdleTimeMillis" value="${database.pool.minEvictableIdleTimeMillis}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${database.pool.timeBetweenEvictionRunsMillis}"/>
        <property name="validationQuery" value="${database.pool.validationQuery}"/>
    </bean>

    <!--
    - Message source for this context, loaded from localized "messages_xx" files.
    -->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="messages"/>
    </bean>

    <gorm:sessionFactory base-package="com.baoxian" data-source-ref="dataSource"
                         message-source-ref="messageSource">
        <property name="hibernateProperties">
            <util:map>
                <entry key="hibernate.hbm2ddl.auto" value="${hibernate.hb2ddl.auto}"/>
                <entry key="hibernate.cache.use_second_level_cache" value="${hibernate.cache.use_second_level_cache}"/>
                <entry key="hibernate.cache.use_query_cache" value="${hibernate.cache.use_query_cache}"/>
                <entry key="hibernate.cache.provider_class" value="${hibernate.cache.provider}"/>
                <entry key="hibernate.dialect" value="${hibernate.dialect}"/>
            </util:map>
        </property>
        <property name="eventListeners">
            <map>
                <entry key="flush">
                    <bean
                            class="org.codehaus.groovy.grails.orm.hibernate.events.PatchedDefaultFlushEventListener"/>
                </entry>
                <entry key="pre-load">
                    <bean
                            class="org.codehaus.groovy.grails.orm.hibernate.support.ClosureEventTriggeringInterceptor"/>
                </entry>
                <entry key="post-load">
                    <bean
                            class="org.codehaus.groovy.grails.orm.hibernate.support.ClosureEventTriggeringInterceptor"/>
                </entry>
                <entry key="save">
                    <bean
                            class="org.codehaus.groovy.grails.orm.hibernate.support.ClosureEventTriggeringInterceptor"/>
                </entry>
                <entry key="save-update">
                    <bean
                            class="org.codehaus.groovy.grails.orm.hibernate.support.ClosureEventTriggeringInterceptor"/>
                </entry>
                <entry key="post-insert">
                    <bean
                            class="org.codehaus.groovy.grails.orm.hibernate.support.ClosureEventTriggeringInterceptor"/>
                </entry>
                <entry key="pre-update">
                    <bean
                            class="org.codehaus.groovy.grails.orm.hibernate.support.ClosureEventTriggeringInterceptor"/>
                </entry>
                <entry key="post-update">
                    <bean
                            class="org.codehaus.groovy.grails.orm.hibernate.support.ClosureEventTriggeringInterceptor"/>
                </entry>
                <entry key="pre-delete">
                    <bean
                            class="org.codehaus.groovy.grails.orm.hibernate.support.ClosureEventTriggeringInterceptor"/>
                </entry>
                <entry key="post-delete">
                    <bean
                            class="org.codehaus.groovy.grails.orm.hibernate.support.ClosureEventTriggeringInterceptor"/>
                </entry>
            </map>
        </property>
    </gorm:sessionFactory>

    <!--
    Activates various annotations to be detected in bean classes:
    Spring's @Required and @Autowired, as well as JSR 250's @Resource.
    -->
    <context:annotation-config/>

    <!--
    Exporter that exposes the Hibernate statistics service via JMX. Autodetects the
    service MBean, using its bean name as JMX object name.
    -->
    <context:mbean-export/>

    <!--
    Instruct Spring to perform declarative transaction management
    automatically on annotated classes.
    -->
    <tx:annotation-driven/>
    <!--<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>-->
    <!-- Hibernate's JMX statistics service -->
    <!--    <bean name="petclinic:type=HibernateStatistics" class="org.hibernate.jmx.StatisticsService">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>-->
</beans>