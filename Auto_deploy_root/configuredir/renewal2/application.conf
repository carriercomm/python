akka {
    event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
    loglevel = "DEBUG"
}

icar {
    actor.timeout = "60 s"
    persistent.path = "/data/db/renewal"    //持久化路径
    persistent.schedule.init.delay = "10 s"    //周期持久化首次启动时间
    persistent.schedule.interval = "3 min"     //周期持久化间隔时间
    iceStorm.config = "./iceStorm.config"    //ice配置文件全路径（！发布时要改！）
    api.provider.actor.name = "akka://api@10.143.72.248:8889/user/provider"  //供应商api路径
    api.allMetaDataItems.actor.name = "akka://api@10.143.72.248:8889/user/provider"  //供应商数据项元信息路径
    renewal.manager.actor.url = "akka://icar@10.143.72.248:8888/user/renewal/"      //managerActor全路径
    proxy.go2.url = "http://10.143.72.247:8080/"
    proxy.host = "10.143.72.248"
    proxy.port = 8088
    notice.actor.name = "user/notice"         //XMPP通知actor路径
    proxy.actor.name = "user/quoteProxy"      //续保单方多方代理actor名称
    changeListSave.actor.name = "user/persistence/changeListSave"      //changeList持久化actor名称
    validators {   //校验器actorPath
        default {  //所有供应商默认的
            car.specific.license = "user/checker/plateNumberCheckActor"
            car.specific.vin = "user/checker/vinCheckActor"
           insured.IDNumber = "user/checker/idNumberCheckActor"
            application.lastCommercialPoliceyNum = "user/checker/policyNumCheckActor"
        }
        72 {       //供应商XX的校验器
//            application.lastCommercialPoliceyNum = "user/checker/policyNum4PiccCheckActor"
        }
    }
    akka {
        event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
        loglevel = "DEBUG"
        actor {
            provider = "akka.remote.RemoteActorRefProvider"

            serialize-messages = on
            serializers {
                java = "akka.serialization.JavaSerializer"
            }
            serialization-bindings {
                "java.lang.Integer" = java
                "java.lang.Boolean" = java
                "com.baoxian.base.ChangeList" = java
            }
            deployment {
                /renewal{
                    router = round-robin
                    nr-of-instances = 8
                }
            }
        }
        remote {
            transport = "akka.remote.netty.NettyRemoteTransport"
            netty {
                hostname = "10.143.72.248"
                port = 8888
            }
        }
    }
}
api{
    actor.timeout = "60 s"
    http {
       interface = "10.143.72.248"
       port = 8081
    }
    akka {
        event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
        loglevel = "DEBUG"
        actor {
            provider = "akka.remote.RemoteActorRefProvider"
        }
        remote {
            transport = "akka.remote.netty.NettyRemoteTransport"
            netty {
                hostname = "10.143.72.248"
                port = 8889
            }
            baseDataActorName = "http://cipm2.baoxian.in/api/provider/renewalForms/"
        }
        location {
            actorName = "akka://icar@10.143.72.248:8888/user/renewal/"
        }
    }
   httpService{
        provider{
            itemDataUri = "http://cipm2.baoxian.in/api/provider/allRenewalItems"
        }
   }
}

spray.can {
  server {
    request-timeout = 65 s
  }
}

client {
    akka {
        event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
        loglevel = "DEBUG"
        actor {
            provider = "akka.remote.RemoteActorRefProvider"

            serialize-messages = on
            serializers {
                java = "akka.serialization.JavaSerializer"
            }
            serialization-bindings {
                "java.lang.Integer" = java
                "java.lang.Boolean" = java
                "com.baoxian.base.ChangeList" = java
            }
        }
        remote {
            transport = "akka.remote.netty.NettyRemoteTransport"
            netty {
                hostname = "10.143.72.248"
                port = 9999
            }
        }
   }

}
